{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
    
       
      
       
       "outbound_loadbalancer_name": {
           "type": "string",
           "metadata": { "description": "Name of the outbound loadbalancer"},
           "defaultValue": "outboundloadbalancer"
       },

        "outbound_loadbalancer_pool_name": {
            "type": "string",
            "metadata": { "description": "Name of the outbound lb backend poolname"},
            "defaultValue": "lbbackendpool"
        },
        "vmusername": {
            "type": "string",
            "defaultValue": "sysadmin"
            
        },

        "vmpassword": {
            "type": "securestring"
           
        },    
            
     
        "existing_vnet": {

            "type": "string",
            "metadata": {"description": "specifiy if you want to use an existing vnet or create a new one"},
            "allowedValues": [
                "Yes", "No"
            ],
            "defaultValue": "No"
        },

        "vnetName": {
            
        "type": "string",
        "metadata": {"descrption": "name of vnet if existing"},
        "defaultValue": "vnet_lb_test"

        },
        "vnetResourceGroup": {
            "type": "string",
            "metadata": {"description": "The resourcegroup of the vnet"},
            "defaultValue": "[resourceGroup().name]"
        },

        "outboundSubnetname": {
        
            "type": "string",
           "defaultValue": "outbound_subnet"
        },

        "internalSubnetname": {
            "type": "string", 
            "defaultValue": "internal_subnet"
        },

        "vmssName" : {

            "type": "string",
            "defaultValue": "[concat('vss-', resourceGroup().location)]"
        },    
     

        
        "vmSize": {
		"type": "string",
		"allowedValues": [
			"Standard_D3",
			"Standard_D4",
			"Standard_D3_v2",
			"Standard_D4_v2",
			"Standard_D5_v2",
			"Standard_D14_v2",
			"Standard_A4"
			],
			"metadata": {
				"description": "VM size for VM Scaleset"
			},
			"defaultValue": "Standard_D3_v2"
		},
        "vmCount": {
            "type": "int",
            "defaultValue": 2
        }
    },

    "variables": {
        
        "namingInfix": "[substring(uniqueString(resourceGroup().id), 0, 5)]",
        	
		"imagePublisher": "MicrosoftWindowsServer",
		"imageOffer": "WindowsServer",
        "imageSKU": "2019-Datacenter",

        "publicIPPrefixName": "[concat('ipprefix-', resourceGroup().location)]"

   
    },
    "resources": [
    
    {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-09-01",
            "comments": "Creates a vnet if no vm exist",
            "condition": "[equals(parameters('existing_vnet'), 'No')]",
            "name": "[parameters('vnetName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.92.0.0/16"
                    ]},
                    "subnets": [
                   
                    {
                        "name": "[parameters('internalSubnetname')]",
                        "properties": {
                            "addressPrefix": "10.92.1.0/24",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "[parameters('outboundSubnetname')]",
                        "properties": {
                            "addressPrefix": "10.92.2.0/24",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }]
                }
    
    }
       ,  
    {
      "type": "Microsoft.Network/publicIPPrefixes",
      "apiVersion": "2018-07-01",
      "name": "[variables('publicIPPrefixName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard"
        
      },
      "properties": {
        "prefixLength": 30,
        "publicIPAddressVersion": "IPv4"
        
      }
      
    },

    {
        "type": "Microsoft.Network/loadBalancers",
        "apiVersion": "2019-12-01",
        "name": "[parameters('outbound_loadbalancer_name')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPPrefixes', variables('publicIPPrefixName'))]"
        ],
        "sku": {
            "name": "Standard"
        },
        "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "frontendlb",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPPrefix": {
                                "id": "[resourceId('Microsoft.Network/publicIPPrefixes', variables('publicIPPrefixName'))]"
                            }
                        }
            }
            ],
                "backendAddressPools": [
                    {
                        "name": "lbbackendpool",
                        "properties": {}
                    }
                ],
                "loadBalancingRules": [],
                "probes": [],
                "inboundNatRules": [],
                "outboundRules": [
                    {
                        "name": "lboutbound",
                        "properties": {
                            "allocatedOutboundPorts": 10000,
                            "protocol": "All",
                            "enableTcpReset": true,
                            "idleTimeoutInMinutes": 15,
                            
                            "frontendIPConfigurations": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('outbound_loadbalancer_name')), '/frontendIPConfigurations/frontendlb')]"
                                }
                            ],
                            "backendAddressPool": {

          "id": "[concat(resourceId('Microsoft.Network/loadBalancers/',parameters('outbound_loadbalancer_name')),'/backendAddressPools/lbbackendpool')]"
          }
                        }
                    }
                ],
                "inboundNatPools": []
            }
        
    },
  

   

{
        "type": "Microsoft.Compute/virtualMachineScaleSets",
        "name": "[parameters('vmssName')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [ 
            "[if(equals(parameters('existing_vnet'), 'Yes'), concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', parameters('vnetResourceGroup'), '/providers/Microsoft.Network/virtualNetworks/', parameters('vnetName')), resourceId('Microsoft.Network/virtualNetworks',parameters('vnetName')))]"
            ,"[resourceId('Microsoft.Network/loadBalancers',parameters('outbound_loadbalancer_name'))]"
        ],
        "apiVersion": "2019-07-01",
        "tags": {
            "PanoramaManaged": "yes"
        },
        "sku": {
            "name": "[parameters('vmSize')]",
            "tier": "Standard",
            "capacity": "[parameters('vmCount')]"
        },
        
        
        "properties": {
            "overprovision": "false",
            
            "singlePlacementGroup": "false",
            
            "upgradePolicy": {
                "mode": "Automatic"
            },
            "virtualMachineProfile": {
                "storageProfile": {
                    
                    "osDisk": {
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "diskSizeGB": 150
                    },
                    "dataDisks": [],
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSKU')]",
                        "version": "latest"
                    }
                },
                "osProfile": {
                    "computerNamePrefix": "[concat('test', variables('namingInfix'))]",
                    "adminUsername": "[parameters('vmusername')]",
                    "adminPassword": "[parameters('vmpassword')]"
                },
                "networkProfile": {
                    "networkInterfaceConfigurations": [
                    
                    {
                        "name": "external-nic",
                        "properties": {
                            "primary": "false",
                            "enableIPForwarding": "true",
                            "ipConfigurations": [
                            {
                                "name": "untrust-ip",
                                "properties": {
                                    "subnet": {
                                        "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', parameters('vnetResourceGroup'), '/providers/Microsoft.Network/virtualNetworks/', parameters('vnetName'), '/subnets/', parameters ('outboundSubnetName'))]"
                                    },
                                    
                                   "loadBalancerBackendAddressPools": [
                                    {
                                        "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', parameters('outbound_loadbalancer_name'), '/backendAddressPools/lbbackendpool')]"       
                                        }]
                                    
                                }
                            }]
                        }
                    },
                    {
                        "name": "internal-nic",
                        "properties": {
                            "primary": "true",
                           
                            "ipConfigurations": [
                            {
                                "name": "trust-ip",
                                "properties": {
                                 
                                    "subnet": {
                                        "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', parameters('vnetResourceGroup'), '/providers/Microsoft.Network/virtualNetworks/', parameters('vnetName'), '/subnets/', parameters('outboundSubnetname'))]"
                                    }
                                }
                            }]
                        }
                    }]
                }
            }
        },
        "zones": ["1", "2", "3"]
    }


        
    ]
}
        
  
   
